trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Plan
  displayName: 'Terraform Plan'
  jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    variables:
      - group: TF_Sample_Library  # Aseg√∫rate de que este grupo de variables existe en Azure DevOps
    steps:
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: 'latest'

    - script: |
        terraform --version
        terraform init \
          -backend-config="storage_account_name=$(storageAccountName)" \
          -backend-config="container_name=$(containerName)" \
          -backend-config="key=$(key)" \
          -backend-config="access_key=$(accessKey)"

        terraform plan -out=tfplan
      displayName: 'Terraform Init and Plan'
      env:
        ARM_CLIENT_ID: $(client_id)
        ARM_CLIENT_SECRET: $(client_secret)
        ARM_SUBSCRIPTION_ID: $(subscription_id)
        ARM_TENANT_ID: $(tenant_id)

- stage: Deploy
  displayName: 'Terraform Apply'
  jobs:
  - job: TerraformApply
    displayName: 'Terraform Apply'
    variables:
      - group: TF_Sample_Library  # Usa las mismas variables de grupo
    steps:
    - task: TerraformInstaller@0
    - script: |
        terraform --version
        terraform init \
          -backend-config="storage_account_name=$(storageAccountName)" \
          -backend-config="container_name=$(containerName)" \
          -backend-config="key=$(key)" \
          -backend-config="access_key=$(accessKey)"

        terraform apply -auto-approve tfplan
      displayName: 'Terraform Init and Apply'
      env:
        ARM_CLIENT_ID: $(client_id)
        ARM_CLIENT_SECRET: $(client_secret)
        ARM_SUBSCRIPTION_ID: $(subscription_id)
        ARM_TENANT_ID: $(tenant_id)
